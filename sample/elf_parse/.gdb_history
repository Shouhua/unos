start
q
b 122
b 126
c
run
n
q
b 105
r
r hello
q
starti
info proc
c
q
b _print_program_header
info sym
info symbols
start
q
list
list main
start
list
q
b _print_program_header 
run
n
r
info b
r
r hello
p /x header
p header
p header->e_phoff
ptype header
ptype /o header
p /x *header
p *header
p /x header+header->e_phoff
p *(header+header->e_phoff)
p /x *((Elf_Phdr *)(header+header->e_phoff))
x /120bx header
p /x *header
ptype /o Elf_Phdr
p /x header+header->e_phoff
p /x header+(header->e_phoff)
p /x header->e_phoff
p /x header
p /x 0x5555555596b0+0x40
p /x (int)header+header->e_phoff
p /x *(int)header+header->e_phoff
p /x *((int)header+header->e_phoff)
p /x *((long)header+header->e_phoff)
p /x *(Elf_Phdr*)((long)header+header->e_phoff)
p /x header->e_entry
q
b 125
run
run hello
n
p /x p_header
p /x *p_header
p /x file_header->e_entry
n
n
p file_header->e_entry >= p_header->p_vaddr
p file_header->e_entry <= (p_header->p_vaddr + p_header->p_memsz)
p (p_header->p_vaddr + p_header->p_memsz)
p /x (p_header->p_vaddr + p_header->p_memsz)
p file_header->e_entry <= (p_header->p_vaddr + p_header->p_memsz)
p file_header->e_entry
p /x file_header->e_entry
list
n
q
b 190
run hello
p /x file_header->e_entry
p /x buf
p /x (Elf_Ehdr*)buf
p /x *(Elf_Ehdr*)buf
info proc
q
b 188
run hello
info proc
p /x buf
n
p /x buf+entry_p_header->p_offset
p /x entry_p_header->p_memsz
echo $?
q
b 188
run hello
n
p errno
bs
bt
q
b 190
run hello
info proc
n
q
